Object subclass: #Banque	instanceVariableNames: 'lesClients lesComptes already'	classVariableNames: ''	package: 'TPE_POO4'!!Banque commentStamp: 'TPPOO4 7/2/2020 22:32' prior: 0!Banque est une classe banque!!Banque methodsFor: 'initalize' stamp: 'TPPOO4 7/2/2020 22:32'!initialize 	"comment stating purpose of message"		super initialize.		 lesComptes := OrderedCollection new.		  lesClients := OrderedCollection new ! !!Banque methodsFor: 'operation' stamp: 'Anonymous 7/2/2020 22:19'!creerCompte: unCompte client: unClient	|compte client banque tail|	banque := self.	client := unClient.	compte := unCompte.	client compte: compte.	self compteList: compte.	self clientList: client.	  	client  id: (banque clientList at: 1 )id + 1 .  compte  numero: (banque compteList at: 1 )numero + 1  		 		 ! !!Banque methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 23:11'!lesClients:  Name already defined ->Client	 lesClients addFirst client  ! !!Banque methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:29'!lesClients	^lesClients ! !!Banque methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:31'!lesComptes:  Name already defined ->Compte	  lesComptes addFirst: Compte! !Object subclass: #Client	instanceVariableNames: 'nom prenom mesComptes'	classVariableNames: ''	package: 'TPE_POO4'!!Client commentStamp: 'TPPOO4 7/2/2020 22:33' prior: 0!c'est la classe des clients!!Client methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:19'!nom: anObject	nom := anObject! !!Client methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 23:02'!mesComptes: compte	mesComptes := compte! !!Client methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 23:02'!mesComptes	^mesComptes! !!Client methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:19'!nom	^ nom! !!Client methodsFor: 'initialize' stamp: 'TPPOO4 7/2/2020 22:56'!initialize 	super initialize.	  nom:= ''.	  prenom:= ''.	  mesComptes:= nil! !!Client methodsFor: 'operation' stamp: 'TPPOO4 7/2/2020 22:19'!transferer:aNumber a: unClient( self compte etat) ifFalse: [ Transcript show: 'Votre compte est ferm√©';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 				(self retirer: aNumber) 					ifTrue: [						(unClient depot: aNumber)								ifTrue: [^true]								ifFalse: [ ^false ]						]						]! !!Client methodsFor: 'operation' stamp: 'TPPOO4 7/2/2020 22:19'!retirer:aNumber  ( self compte etat) ifFalse: [ Transcript show: 'Votre compte est ferm√©';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 			(self compte montant > aNumber )			ifFalse: [ Transcript show: 'Solde insuffisant';cr.				^false]			ifTrue:[				(self compte) montant:(self compte - aNumber).				^true				]	 			]	! !!Client methodsFor: 'operation' stamp: 'TPPOO4 7/2/2020 23:08'!depot: aNumber	self mesComptes etat		ifFalse: [^ false ].	aNumber < 1		ifTrue: [ ^ false ]		ifFalse: [ self mesComptes Solde: self mesComptes+ aNumber.			^ true ]! !Object subclass: #Compte	instanceVariableNames: 'Solde numero limite taxeInteret etat'	classVariableNames: ''	package: 'TPE_POO4'!!Compte commentStamp: 'TPPOO4 7/2/2020 22:33' prior: 0!classe des comptes qui contient des sous classes compte courant et compte epargne!!Compte methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:19'!etat: aBoolean"Lorque l etat est √† false, le compte est bloqu√© et √† true , il est ouvert"	etat := aBoolean! !!Compte methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:58'!Solde: aNumber	Solde := aNumber! !!Compte methodsFor: 'accessing' stamp: 'TPPOO4 7/2/2020 22:19'!numero: aNumber	numero:= aNumber ! !!Compte methodsFor: 'getters' stamp: 'TPPOO4 7/2/2020 22:19'!etat"permet de savoir si un compte est fermer ou pas "	^ etat! !!Compte methodsFor: 'getters' stamp: 'TPPOO4 7/2/2020 22:19'!numero	^ numero! !!Compte methodsFor: 'getters' stamp: 'TPPOO4 7/2/2020 22:58'!Solde	^Solde! !!Compte methodsFor: 'initalize' stamp: 'TPPOO4 7/2/2020 23:00'!initialize	  Solde:= 0.	  numero:= 0.	  limite:= 0.	  taxeInteret :=0.! !Compte subclass: #CompteCourant	instanceVariableNames: 'carte code'	classVariableNames: ''	package: 'TPE_POO4'!!CompteCourant commentStamp: 'TPPOO4 7/2/2020 22:34' prior: 0!compte courant!!CompteCourant methodsFor: 'accessing' stamp: 'Anonymous 7/2/2020 22:19'!code^code! !!CompteCourant methodsFor: 'accessing' stamp: 'Anonymous 7/2/2020 22:19'!carte ^carte! !Compte subclass: #CompteEpargne	instanceVariableNames: 'prime'	classVariableNames: ''	package: 'TPE_POO4'!!CompteEpargne commentStamp: 'TPPOO4 7/2/2020 22:34' prior: 0!compte epargne!!CompteEpargne methodsFor: 'accessing' stamp: 'Anonymous 7/2/2020 22:19'!prime ^prime! !